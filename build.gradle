// QuikMod Buildscript
buildscript {
    repositories {
        jcenter()
        maven {
            name = "Forge Gradle"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "Gradle Plugins"
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'gradle.plugin.com.rlonryan:QuikMod:1.0.21'
    }
}

// Apply QuikMod
apply plugin: 'com.rlonryan.quikmod'
apply plugin: 'maven-publish'

// Tweak MineCraft Task
minecraft {
    makeObfSourceJar = false
    useDepAts = true
}

// Setup Remotes
repositories {
    maven {
        name "TehNut Maven"
        url "http://tehnut.info/maven"
    }
    maven {
        name "Tterrag Maven"
        url "http://maven.tterrag.com/"
    }
    maven {
        name "JEI Maven"
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        name "OpenComputers"
        url  "http://maven.cil.li/"
    }
    maven {
        name "ActuallyAdditions"
        url "https://maven.chaosfield.at/"
    }
    maven {
        name "Botania"
        url "https://maven.blamejared.com/"
    }
    maven {
        name "Baubles"
        url "https://maven.thiakil.com/"
    }
}

// List Deps.
dependencies {
    // AgriCore
    shade project(':lib/AgriCore');
    
    // InfinityLib
    compile project(':lib/InfinityLib')
    
    // Java Libraries
    compile 'com.google.guava:guava:24.0-jre'
    
    // Minecraft Mods
    deobfCompile "mezz.jei:jei_1.12.2:4.8.5.140"
    deobfCompile "vazkii.botania:Botania:r1.10-353"
    deobfCompile "com.azanor.baubles:Baubles:1.12-1.5.2"
    deobfCompile "de.ellpeck.actuallyadditions:ActuallyAdditions:1.12.2-r136"
    deobfCompile "li.cil.oc:OpenComputers:MC1.12.2-1.7.1.63"
    
    // *Special* Minecraft Mods
    // Have to disable transitive deps on this one since stupid stuff is going on...
    deobfCompile ("mcjty.theoneprobe:TheOneProbe-1.12:1.12-1.4.19-11") { transitive = false }
}

// Add AgriPlants
processResources {
    from('lib/AgriPlants') {
        include '**/*.json'
        into 'json/defaults'
    }
}

// Javadoc
task mainJavadoc(type: Javadoc) {
    source = sourceSets.main.allJava
    title = "AgriCraft ${mod.version} Documentation"
    destinationDir = file("${project.docsDir}/mainJavadoc")
    failOnError = false
}

task apiJavadoc(type: Javadoc) {
    source = sourceSets.main.allJava
    include "**/api/**"
    title = "AgriCraft ${mod.version} API Documentation"
    destinationDir = file("${project.docsDir}/apiJavadoc")
    failOnError = false
}

// Jars
task mainSourceJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task mainJavadocJar(type: Jar, dependsOn: mainJavadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task apiJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    include "${mod.package.replace('.', '/')}/api/**/*"
    classifier = 'api'
}

task apiSourceJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    include "${mod.package.replace('.', '/')}/api/**/*"
    classifier = 'api-source'
}

task apiJavadocJar(type: Jar, dependsOn: apiJavadoc) {
    from apiJavadoc.destinationDir
    classifier = 'api-javadoc'
}

// Tell build that it needs the API compiled first.
build.dependsOn apiJar

// Setup Maven Publishing
publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            // Main
            artifact jar
            artifact javadocJar
            artifact sourceJar
            
            // API
            artifact apiJar
            artifact apiJavadocJar
            artifact apiSourceJar
        }
    }
    repositories {
        if (project.hasProperty('maven_repo')) {
            maven { url maven_repo }
        } else {
            mavenLocal()
        }
    }
}

// Fix Shading
jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
            exclude 'com/google', 'com/google/**'
            exclude 'net/jcip', 'net/jcip/**'
            exclude 'edu/umd', 'edu/umd/**'
            exclude 'javassist', 'javassist/**'
            exclude 'javax/annotation', 'javax/annotation/**'
        }
    }
}
